{"version":3,"file":"static/js/8.0eb45941.chunk.js","mappings":"kPAgDA,EA7CgB,WACd,IAAAA,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAClBI,GAAYC,EAAAA,EAAAA,MAAZD,QAsBR,OApBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEgC,OAFhCF,EAAAC,KAAA,EAEF,mCAAkCD,EAAAE,KAAA,EAC1BC,MAAM,sCAADC,OAAuCd,EAAO,qBAAAc,OAD3D,qCACyF,KAAD,EAAzF,KAARN,EAAQE,EAAAK,MAEDC,GAAG,CAADN,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EACMJ,EAASS,OAAO,KAAD,EAA5BR,EAAIC,EAAAK,KACVhB,EAAWU,EAAKS,SAASR,EAAAE,KAAA,uBAEnB,IAAIO,MAAM,gCAAgC,KAAD,GAAAT,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAGjDW,QAAQC,MAAM,0BAAyBZ,EAAAU,IAAS,yBAAAV,EAAAa,OAAA,GAAAhB,EAAA,mBAEnD,kBAdiB,OAAAH,EAAAoB,MAAA,KAAAC,UAAA,KAgBlBtB,GACF,GAAG,CAACH,KAGF0B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,OAAAD,SACG7B,EAAQ+B,OAAS,GAChBD,EAAAA,EAAAA,KAAA,MAAAD,SACG7B,EAAQgC,KAAI,SAACC,GAAM,OAClBL,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAII,EAAOC,WACXN,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,WAASI,EAAOE,YAFZF,EAAOG,GAGX,OAITN,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6BAKb,ECrCA,EARoB,WAClB,OACEC,EAAAA,EAAAA,KAAA,OAAAD,UACMC,EAAAA,EAAAA,KAACO,EAAO,KAGlB,C","sources":["components/Reviews/Reviews.jsx","pages/ReviewsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const apiKey = 'c473a8c64320184dea7ebdd3984bb9b6';\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`);\n        \n        if (response.ok) {\n          const data = await response.json();\n          setReviews(data.results);\n        } else {\n          throw new Error('Network response was not ok.');\n        }\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <div>\n        {reviews.length > 0 ? (\n          <ul>\n            {reviews.map((review) => (\n              <li key={review.id}>\n                <p>{review.content}</p>\n                <p>Author: {review.author}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No reviews available</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import Reviews from \"components/Reviews/Reviews\"\nconst ReviewsPage = () => {\n  return (\n    <div>\n          <Reviews />\n    </div>\n  )\n}\n\nexport default ReviewsPage"],"names":["_useState","useState","_useState2","_slicedToArray","reviews","setReviews","movieId","useParams","useEffect","fetchReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","concat","sent","ok","json","results","Error","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","length","map","review","content","author","id","Reviews"],"sourceRoot":""}