{"version":3,"file":"static/js/366.244fb434.chunk.js","mappings":"6OACA,EAAuB,sBAAvB,EAAmD,qB,SC+CnD,EA3Ca,WACX,IAAAA,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACZI,GAAYC,EAAAA,EAAAA,MAAZD,QAsBP,OApBDE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEmC,OAFnCF,EAAAC,KAAA,EAEC,mCAAkCD,EAAAE,KAAA,EAC1BC,MAAM,sCAADC,OAAuCd,EAAO,qBAAAc,OAD3D,qCACyF,KAAD,EAAzF,KAARN,EAAQE,EAAAK,MAEDC,GAAG,CAADN,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EACMJ,EAASS,OAAO,KAAD,EAA5BR,EAAIC,EAAAK,KACVhB,EAAQU,EAAKX,MAAMY,EAAAE,KAAA,uBAEb,IAAIM,MAAM,gCAAgC,KAAD,GAAAR,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAGjDU,QAAQC,MAAM,uBAAsBX,EAAAS,IAAS,yBAAAT,EAAAY,OAAA,GAAAf,EAAA,mBAEhD,kBAdc,OAAAH,EAAAmB,MAAA,KAAAC,UAAA,KAgBfrB,GACF,GAAG,CAACH,KAGFyB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaH,SACzB5B,EAAKgC,KAAI,SAACC,GAAK,OACdN,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEC,UAAWC,EACXG,IAAKD,EAAME,aAAY,kCAAAnB,OAAqCiB,EAAME,cAAY,qGAC9EC,IAAKH,EAAMI,QAEbR,EAAAA,EAAAA,KAAA,KAAAD,SAAIK,EAAMI,SANHJ,EAAMK,GAOV,QAKf,ECrCA,EARiB,WACf,OACET,EAAAA,EAAAA,KAAA,OAAAD,UACMC,EAAAA,EAAAA,KAACU,EAAI,KAGf,C","sources":["webpack://react-homework-template/./src/components/Cast/CastCss.module.css?e23c","components/Cast/Cast.jsx","pages/CastPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"CastCss_list__R9tKQ\",\"img\":\"CastCss_img__K2q6l\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CastCss from \"./CastCss.module.css\";\n\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const apiKey = 'c473a8c64320184dea7ebdd3984bb9b6';\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`);\n        \n        if (response.ok) {\n          const data = await response.json();\n          setCast(data.cast);\n        } else {\n          throw new Error('Network response was not ok.');\n        }\n      } catch (error) {\n        console.error('Error fetching cast:', error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n   return (\n    <div>\n      <h2>Cast</h2>\n      <ul className={CastCss.list}>\n        {cast.map((actor) => (\n          <li key={actor.id}>\n            <img\n              className={CastCss.img}\n              src={actor.profile_path ? `https://image.tmdb.org/t/p/w500${actor.profile_path}` : `https://fastly.picsum.photos/id/593/1774/2365.jpg?hmac=zzvok1xX2Is_tGRfdHUANqWsOIK0T-HVzWPkaMqZInw`}\n              alt={actor.name}\n            />\n            <p>{actor.name}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import Cast from \"components/Cast/Cast\"\nconst CastPage = () => {\n  return (\n    <div>\n          <Cast />\n    </div>\n  )\n}\n\nexport default CastPage"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","concat","sent","ok","json","Error","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","className","CastCss","map","actor","src","profile_path","alt","name","id","Cast"],"sourceRoot":""}